FROM nvidia/cuda:11.0.3-base-ubuntu20.04

RUN apt update && \
    DEBIAN_FRONTEND=noninteractive \
    apt install --no-install-recommends -y build-essential software-properties-common && \
    add-apt-repository -y ppa:deadsnakes/ppa && \
    apt install --no-install-recommends -y python3.8 python3-pip python3-setuptools python3-distutils && \
    apt clean && rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/python3 /usr/bin/python
RUN python -m pip install --upgrade pip

WORKDIR /usr/src/app

EXPOSE 9714

# dependencies
RUN pip install setuptools wheel

COPY ./requirements.txt ./requirements.txt
RUN pip install -r requirements.txt

RUN python -c "from transformers import pipeline; pipeline('text-classification', model='EIStakovskii/xlm_roberta_base_multilingual_toxicity_classifier_plus')"
RUN python -c "from transformers import pipeline; pipeline('text-classification', model='FredZhang7/one-for-all-toxicity-v3')"
RUN python -c "from transformers import pipeline; pipeline('text-classification', model='citizenlab/distilbert-base-multilingual-cased-toxicity')"
RUN python -c "from detoxify import Detoxify; Detoxify('multilingual')"
RUN python -c "from transformers import pipeline; pipeline('text-classification', model='textdetox/xlmr-large-toxicity-classifier')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='tomh/toxigen_hatebert')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='GroNLP/hateBERT')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='pysentimiento/bertweet-hate-speech')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='Hate-speech-CNERG/bert-base-uncased-hatexplain')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='cardiffnlp/twitter-roberta-base-hate-latest')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='Hate-speech-CNERG/dehatebert-mono-german')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='deepset/bert-base-german-cased-hatespeech-GermEval18Coarse')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='martin-ha/toxic-comment-model')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='nicholasKluge/ToxicityModel')"
#RUN python -c "from transformers import pipeline; pipeline('text-classification', model='EIStakovskii/german_toxicity_classifier_plus_v2')"


# log level
ARG LOG_LEVEL="DEBUG"
ENV LOG_LEVEL=$LOG_LEVEL

# config
ARG MODEL_CACHE_SIZE=1
ENV MODEL_CACHE_SIZE=$MODEL_CACHE_SIZE

# meta data
ARG ANNOTATOR_NAME="duui-transformers-toxic"
ENV ANNOTATOR_NAME=$ANNOTATOR_NAME
ARG ANNOTATOR_VERSION="unset"
ENV ANNOTATOR_VERSION=$ANNOTATOR_VERSION
ARG MODEL_VERSION=""
ENV MODEL_VERSION=$MODEL_VERSION

# offline mode for huggingface
#ARG TEXTIMAGER_DUUI_TRANSFORMERS_SENTIMENT_TRANSFORMERS_OFFLINE=1
#ENV TRANSFORMERS_OFFLINE=$TEXTIMAGER_DUUI_TRANSFORMERS_SENTIMENT_TRANSFORMERS_OFFLINE

# copy scripts
COPY ./src/main/python/TypeSystem.xml ./TypeSystem.xml
COPY ./src/main/python/duui_transformers_toxic.py ./duui_transformers_toxic.py
COPY ./src/main/python/duui_toxic.lua ./duui_toxic.lua
COPY ./src/main/python/ToxicCheck.py ./ToxicCheck.py



ENTRYPOINT ["uvicorn", "duui_transformers_toxic:app", "--host", "0.0.0.0", "--port" ,"9714"]
CMD ["--workers", "1"]
